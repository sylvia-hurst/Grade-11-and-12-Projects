
import java.text.DecimalFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hu765630
 * Name: Sylvia Hurst
 * Teacher's Name: Mr. Yeung
 * Course: ICS
 * Start Date: October 27, 2020
 * End Date: October 27, 2020
 * Description: Card memory game. You are shown five different
 * cards at once. Each card is random. Then they are all hidden.
 * You can request one hint from each and it will randomly decide
 * to give you the rank or the suit to help you guess. Otherwise,
 * you need to type in your guess into the text box. Correct answers
 * will improve your score. You can reset the program as many times
 * as you want to increase your correct guess percentage.
 */
public class FrmCardGame extends javax.swing.JFrame {

    /**
     * Creates new form FrmCardGame
     */
    public FrmCardGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblC1 = new javax.swing.JLabel();
        lblC2 = new javax.swing.JLabel();
        lblC3 = new javax.swing.JLabel();
        lblC4 = new javax.swing.JLabel();
        lblC5 = new javax.swing.JLabel();
        lblResult1 = new javax.swing.JLabel();
        lblResult2 = new javax.swing.JLabel();
        lblResult3 = new javax.swing.JLabel();
        lblResult4 = new javax.swing.JLabel();
        lblResult5 = new javax.swing.JLabel();
        lblCorrect = new javax.swing.JLabel();
        lblIncorrect = new javax.swing.JLabel();
        lblPercent = new javax.swing.JLabel();
        txtC1 = new javax.swing.JTextField();
        txtC2 = new javax.swing.JTextField();
        txtC3 = new javax.swing.JTextField();
        txtC4 = new javax.swing.JTextField();
        txtC5 = new javax.swing.JTextField();
        btnH1 = new javax.swing.JButton();
        btnH2 = new javax.swing.JButton();
        btnH3 = new javax.swing.JButton();
        btnH4 = new javax.swing.JButton();
        btnH5 = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("The Card-Guessing Game");
        getContentPane().add(lblTitle);
        lblTitle.setBounds(150, 0, 280, 50);

        lblDesc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDesc.setText("Memorize the cards and then guess them! You can request a hint to show you the rank or suit of a card.");
        getContentPane().add(lblDesc);
        lblDesc.setBounds(20, 40, 560, 30);

        lblC1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblC1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblC1);
        lblC1.setBounds(30, 90, 90, 70);

        lblC2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblC2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblC2);
        lblC2.setBounds(140, 90, 90, 70);

        lblC3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblC3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblC3);
        lblC3.setBounds(250, 90, 90, 70);

        lblC4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblC4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblC4);
        lblC4.setBounds(360, 90, 90, 70);

        lblC5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblC5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblC5);
        lblC5.setBounds(470, 90, 90, 70);

        lblResult1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblResult1);
        lblResult1.setBounds(40, 160, 70, 20);

        lblResult2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblResult2);
        lblResult2.setBounds(150, 160, 70, 20);

        lblResult3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblResult3);
        lblResult3.setBounds(260, 160, 70, 20);

        lblResult4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblResult4);
        lblResult4.setBounds(370, 160, 70, 20);

        lblResult5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblResult5);
        lblResult5.setBounds(480, 160, 70, 20);

        lblCorrect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblCorrect);
        lblCorrect.setBounds(170, 294, 250, 20);

        lblIncorrect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblIncorrect);
        lblIncorrect.setBounds(170, 310, 250, 20);

        lblPercent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblPercent);
        lblPercent.setBounds(170, 330, 250, 20);
        getContentPane().add(txtC1);
        txtC1.setBounds(30, 190, 90, 40);
        getContentPane().add(txtC2);
        txtC2.setBounds(140, 190, 90, 40);
        getContentPane().add(txtC3);
        txtC3.setBounds(250, 190, 90, 40);
        getContentPane().add(txtC4);
        txtC4.setBounds(360, 190, 90, 40);
        getContentPane().add(txtC5);
        txtC5.setBounds(470, 190, 90, 40);

        btnH1.setForeground(new java.awt.Color(153, 153, 153));
        btnH1.setText("HINT");
        btnH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnH1);
        btnH1.setBounds(40, 250, 70, 30);

        btnH2.setForeground(new java.awt.Color(153, 153, 153));
        btnH2.setText("HINT");
        btnH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnH2);
        btnH2.setBounds(150, 250, 70, 30);

        btnH3.setForeground(new java.awt.Color(153, 153, 153));
        btnH3.setText("HINT");
        btnH3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnH3);
        btnH3.setBounds(260, 250, 70, 30);

        btnH4.setForeground(new java.awt.Color(153, 153, 153));
        btnH4.setText("HINT");
        btnH4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnH4);
        btnH4.setBounds(370, 250, 70, 30);

        btnH5.setForeground(new java.awt.Color(153, 153, 153));
        btnH5.setText("HINT");
        btnH5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnH5ActionPerformed(evt);
            }
        });
        getContentPane().add(btnH5);
        btnH5.setBounds(480, 250, 70, 30);

        btnStart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnStart.setText("START");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        getContentPane().add(btnStart);
        btnStart.setBounds(230, 370, 130, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Variable declarations:
    
    //Counting the turns: There's a display turn and a guessing turn
    int turn = 0;
    
    //Hint available true/false
    boolean hintA1 = false, hintA2 = false, hintA3 = false, hintA4 = false, hintA5 = false;
    
    //Keeping track of correct/incorrect guesses and percent
    //They must be float-type to consider decimal places during the percent calculation
    float correct = 0;
    float incorrect = 0;
    double percent = 0;
    
    //Decimal formatter
    private static final DecimalFormat df2 = new DecimalFormat("##.##");
    
    //Hosting values of each of the five cards
    int card1 = 0, card2 = 0, card3 = 0, card4 = 0, card5 = 0;
    
    //Methods:
    
    //Setting up cards
    public void setUpCards(){
        //Generates the cards and applies the value to a variable for safekeeping
        card1 = DeckAY.generateCard();
        card2 = DeckAY.generateCard();
        card3 = DeckAY.generateCard();
        card4 = DeckAY.generateCard();
        card5 = DeckAY.generateCard();
    }
    
    //Displaying cards
    public void displayCards(){
        //Displays the card name to the corresponding label.
        //The html code within the label text formats the label to ensure that
        //the text is centered and will wrap around instead of cutting off into a "..."
        lblC1.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card1)+" of "+DeckAY.getSuit(card1)+"</p></html>");
        lblC2.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card2)+" of "+DeckAY.getSuit(card2)+"</p></html>");
        lblC3.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card3)+" of "+DeckAY.getSuit(card3)+"</p></html>");
        lblC4.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card4)+" of "+DeckAY.getSuit(card4)+"</p></html>");
        lblC5.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card5)+" of "+DeckAY.getSuit(card5)+"</p></html>");
    }
    
    //Hiding cards
    public void hideCards(){
        //Sets all card display labels to "???"
        lblC1.setText("???");
        lblC2.setText("???");
        lblC3.setText("???");
        lblC4.setText("???");
        lblC5.setText("???");
    }
    
    //Turning hint buttons on
    public void hintOn(){
        //The HINT buttons become clickable
        hintA1 = true;
        hintA2 = true;
        hintA3 = true;
        hintA4 = true;
        hintA5 = true;
        //They turn from grey to black
        btnH1.setForeground(new java.awt.Color(0, 0, 0));
        btnH2.setForeground(new java.awt.Color(0, 0, 0));
        btnH3.setForeground(new java.awt.Color(0, 0, 0));
        btnH4.setForeground(new java.awt.Color(0, 0, 0));
        btnH5.setForeground(new java.awt.Color(0, 0, 0));
    }
    
    //Turning hint buttons off
    public void hintOff(){
        //The HINT buttons become UNclickable
        hintA1 = false;
        hintA2 = false;
        hintA3 = false;
        hintA4 = false;
        hintA5 = false;
        //They turn from black to grey
        btnH1.setForeground(new java.awt.Color(153, 153, 153));
        btnH2.setForeground(new java.awt.Color(153, 153, 153));
        btnH3.setForeground(new java.awt.Color(153, 153, 153));
        btnH4.setForeground(new java.awt.Color(153, 153, 153));
        btnH5.setForeground(new java.awt.Color(153, 153, 153));
    }
    
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        
        //START / CONTINUE BUTTON
        
        switch (turn) {
            case 0:
                //If game not started yet, the form is set up
                
                //This code also runs when a new turn is started,
                //so it makes sure to wipe the results labels
                //as well as the text boxes.
                lblResult1.setText("");
                lblResult2.setText("");
                lblResult3.setText("");
                lblResult4.setText("");
                lblResult5.setText("");
                txtC1.setText("");
                txtC2.setText("");
                txtC3.setText("");
                txtC4.setText("");
                txtC5.setText("");
                
                setUpCards();
                displayCards();
                
                //The START button becomes a CONTINUE button
                btnStart.setText("CONTINUE");
                turn++;
                break;
            case 1:
                //Continue - this button is meant to be pressed
                //after you have finished viewing and memorizing
                //the cards. It will hide the card names, and open
                //up the hint boxes and you can input your guesses.
                
                hideCards();
                hintOn();
                
                //To prevent the user from having already typed in
                //their responses to cheat, the text boxes are wiped again.
                txtC1.setText("");
                txtC2.setText("");
                txtC3.setText("");
                txtC4.setText("");
                txtC5.setText("");
                
                turn++;
                break;
            case 2:
                //Continue - this button is meant to be pressed
                //after you have inputted all your guesses.
                //It will confirm if you correctly guessed them.
                //The cards will be displayed again to show you what
                //they were, with labels saying "Correct!" or "Incorrect!"
                //The hint buttons are also closed again.
                
                displayCards();
                hintOff();
                
                //Card 1
                if (txtC1.getText().equals(DeckAY.getFace(card1)+" of "+DeckAY.getSuit(card1))){
                    //Correct!
                    lblResult1.setText("Correct!");
                    correct++;
                } else {
                    //Incorrect!
                    lblResult1.setText("Incorrect!");
                    incorrect++;
                }
                
                //Card 2
                if (txtC2.getText().equals(DeckAY.getFace(card2)+" of "+DeckAY.getSuit(card2))){
                    //Correct!
                    lblResult2.setText("Correct!");
                    correct++;
                } else {
                    //Incorrect!
                    lblResult2.setText("Incorrect!");
                    incorrect++;
                }
                
                //Card 3
                if (txtC3.getText().equals(DeckAY.getFace(card3)+" of "+DeckAY.getSuit(card3))){
                    //Correct!
                    lblResult3.setText("Correct!");
                    correct++;
                } else {
                    //Incorrect!
                    lblResult3.setText("Incorrect!");
                    incorrect++;
                }
                
                //Card 4
                if (txtC4.getText().equals(DeckAY.getFace(card4)+" of "+DeckAY.getSuit(card4))){
                    //Correct!
                    lblResult4.setText("Correct!");
                    correct++;
                } else {
                    //Incorrect!
                    lblResult4.setText("Incorrect!");
                    incorrect++;
                }
                
                //Card 5
                if (txtC5.getText().equals(DeckAY.getFace(card5)+" of "+DeckAY.getSuit(card5))){
                    //Correct!
                    lblResult5.setText("Correct!");
                    correct++;
                } else {
                    //Incorrect!
                    lblResult5.setText("Incorrect!");
                    incorrect++;
                }
                
                //A quick percent calculation is made and the values
                //update on the display
                percent = correct/(correct+incorrect)*100;
                lblCorrect.setText("Correct: "+df2.format(correct));
                lblIncorrect.setText("Incorrect: "+df2.format(incorrect));
                lblPercent.setText("Percent: "+df2.format(percent)+"%");
                
                //After this, the turn resets to 0 for a new turn to start
                //the next time you press "CONTINUE".
                turn=0;
                break;
        }
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH1ActionPerformed
        
        //Provides a hint of either the face or the suit
        
        //Only works if the button is "On"
        if (hintA1==true){
            if ((int)(Math.random()*2)+1==1){
                //50% chance to be the Face
                lblC1.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card1)+" of ???</p></html>");
            } else {
                //50% chance to be the Suit
                lblC1.setText("<html><p style=\"text-align:center\">??? of "+DeckAY.getSuit(card1)+"</p></html>");
            }
            //Closes the button so it cannot be re-used
            btnH1.setForeground(new java.awt.Color(153, 153, 153));
            hintA1=false;
        }
        
    }//GEN-LAST:event_btnH1ActionPerformed

    private void btnH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH2ActionPerformed
        
        //Provides a hint of either the face or the suit
        
        //Only works if the button is "On"
        if (hintA2==true){
            if ((int)(Math.random()*2)+1==1){
                //50% chance to be the Face
                lblC2.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card2)+" of ???</p></html>");
            } else {
                //50% chance to be the Suit
                lblC2.setText("<html><p style=\"text-align:center\">??? of "+DeckAY.getSuit(card2)+"</p></html>");
            }
            //Closes the button so it cannot be re-used
            btnH2.setForeground(new java.awt.Color(153, 153, 153));
            hintA2=false;
        }
        
    }//GEN-LAST:event_btnH2ActionPerformed

    private void btnH3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH3ActionPerformed
        
        //Provides a hint of either the face or the suit
        
        //Only works if the button is "On"
        if (hintA3==true){
            if ((int)(Math.random()*2)+1==1){
                //50% chance to be the Face
                lblC3.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card3)+" of ???</p></html>");
            } else {
                //50% chance to be the Suit
                lblC3.setText("<html><p style=\"text-align:center\">??? of "+DeckAY.getSuit(card3)+"</p></html>");
            }
            //Closes the button so it cannot be re-used
            btnH3.setForeground(new java.awt.Color(153, 153, 153));
            hintA3=false;
        }
        
    }//GEN-LAST:event_btnH3ActionPerformed

    private void btnH4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH4ActionPerformed
        
        //Provides a hint of either the face or the suit
        
        //Only works if the button is "On"
        if (hintA4==true){
            if ((int)(Math.random()*2)+1==1){
                //50% chance to be the Face
                lblC4.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card4)+" of ???</p></html>");
            } else {
                //50% chance to be the Suit
                lblC4.setText("<html><p style=\"text-align:center\">??? of "+DeckAY.getSuit(card4)+"</p></html>");
            }
            //Closes the button so it cannot be re-used
            btnH4.setForeground(new java.awt.Color(153, 153, 153));
            hintA4=false;
        }
        
    }//GEN-LAST:event_btnH4ActionPerformed

    private void btnH5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnH5ActionPerformed
        
        //Provides a hint of either the face or the suit
        
        //Only works if the button is "On"
        if (hintA5==true){
            if ((int)(Math.random()*2)+1==1){
                //50% chance to be the Face
                lblC5.setText("<html><p style=\"text-align:center\">"+DeckAY.getFace(card5)+" of ???</p></html>");
            } else {
                //50% chance to be the Suit
                lblC5.setText("<html><p style=\"text-align:center\">??? of "+DeckAY.getSuit(card5)+"</p></html>");
            }
            //Closes the button so it cannot be re-used
            btnH5.setForeground(new java.awt.Color(153, 153, 153));
            hintA5=false;
        }
        
    }//GEN-LAST:event_btnH5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCardGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCardGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnH1;
    private javax.swing.JButton btnH2;
    private javax.swing.JButton btnH3;
    private javax.swing.JButton btnH4;
    private javax.swing.JButton btnH5;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel lblC1;
    private javax.swing.JLabel lblC2;
    private javax.swing.JLabel lblC3;
    private javax.swing.JLabel lblC4;
    private javax.swing.JLabel lblC5;
    private javax.swing.JLabel lblCorrect;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblIncorrect;
    private javax.swing.JLabel lblPercent;
    private javax.swing.JLabel lblResult1;
    private javax.swing.JLabel lblResult2;
    private javax.swing.JLabel lblResult3;
    private javax.swing.JLabel lblResult4;
    private javax.swing.JLabel lblResult5;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtC1;
    private javax.swing.JTextField txtC2;
    private javax.swing.JTextField txtC3;
    private javax.swing.JTextField txtC4;
    private javax.swing.JTextField txtC5;
    // End of variables declaration//GEN-END:variables
}
