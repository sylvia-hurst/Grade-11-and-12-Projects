import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author hu765630
 * Names: Sylvia Hurst and Aris Relleve
 * Teacher's Name: Mr. Yeung
 * Course: ICS
 * Start Date: November 9, 2020
 * End Date: November 12, 2020
 * Description: Collaboration project between Sylvia and Aris.
 * 
 * The game:
 * There are two frames, the left and the right. The left frame displays
 * a simple pattern on a 3x3 grid where tiles light up for a moment in
 * a specific order. The user needs to replicate the pattern by clicking
 * the corresponding buttons on the right frame. With each success, the
 * pattern is repeated with one additional step each time. The game ends
 * when the user makes a mistake, and their high score is recorded to a
 * file for safekeeping (and will be called to display upon each start-up).
 * 
 * Sylvia has done:
 * - Form designs
 * - Code for the Left Frame (pattern generation and display)
 * - Code for the Right Frame (user input and score display)
 * - Code for the file input/output for the high score (separate class)
 * 
 * Aris has done:
 * - Tic tac toe extension
 */

public class FrmRight extends javax.swing.JFrame {

    /**
     * Creates new form FrmRight
     */
    public FrmRight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnG1 = new javax.swing.JButton();
        btnG2 = new javax.swing.JButton();
        btnG3 = new javax.swing.JButton();
        btnG4 = new javax.swing.JButton();
        btnG5 = new javax.swing.JButton();
        btnG6 = new javax.swing.JButton();
        btnG7 = new javax.swing.JButton();
        btnG8 = new javax.swing.JButton();
        btnG9 = new javax.swing.JButton();
        lblHScore = new javax.swing.JLabel();
        lblCScore = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnG1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG1ActionPerformed(evt);
            }
        });

        btnG2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG2ActionPerformed(evt);
            }
        });

        btnG3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG3ActionPerformed(evt);
            }
        });

        btnG4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG4ActionPerformed(evt);
            }
        });

        btnG5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG5ActionPerformed(evt);
            }
        });

        btnG6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG6ActionPerformed(evt);
            }
        });

        btnG7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG7ActionPerformed(evt);
            }
        });

        btnG8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG8ActionPerformed(evt);
            }
        });

        btnG9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnG9ActionPerformed(evt);
            }
        });

        lblHScore.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblHScore.setForeground(new java.awt.Color(0, 0, 102));
        lblHScore.setText("High Score: 0");

        lblCScore.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        lblCScore.setForeground(new java.awt.Color(0, 0, 102));
        lblCScore.setText("Current Score: 0");

        lblDesc.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        lblDesc.setForeground(new java.awt.Color(0, 0, 102));
        lblDesc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDesc.setText("Welcome to Simon Says! Press \"START\" to begin!");

        btnNext.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        btnNext.setForeground(new java.awt.Color(0, 0, 102));
        btnNext.setText("START");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnG1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnG4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnG7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btnG9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHScore, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCScore, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(btnNext)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnG1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnG4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnG7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(lblDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblHScore, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCScore, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    //Variable declarations:
    
    //Current value of the START/NEXT/RESTART button
    boolean started = false;
    
    //Grid button availability boolean
    boolean AG=false;
    
    //Score
    int score = 0;
    
    //Pattern arrays: One for the generated pattern,
    //one for the user-inputted pattern
    static ArrayList pattern = new ArrayList();
    static ArrayList userPattern = new ArrayList();
    
    //Methods:
    
    //Pattern check - does the current user-inputted pattern
    //match the corresponding pattern order so far?
    public void checkPattern() throws IOException{
        for (int i=0; i<userPattern.size(); i++){
            if (userPattern.get(i)!=pattern.get(i)){
                //FAILURE
                AG = false;
                lblDesc.setText("Failure!");
                pattern.clear();
                userPattern.clear();
                hScore.writeScores(score);
                started = false;
                btnNext.setText("RESTART");
                score = 0;
                lblCScore.setText("Current Score: 0");
                //Red: 197, 58, 58
                //Default: 240, 240, 240
                btnG1.setBackground(new java.awt.Color(197, 58, 58));
                btnG2.setBackground(new java.awt.Color(197, 58, 58));
                btnG3.setBackground(new java.awt.Color(197, 58, 58));
                btnG4.setBackground(new java.awt.Color(197, 58, 58));
                btnG5.setBackground(new java.awt.Color(197, 58, 58));
                btnG6.setBackground(new java.awt.Color(197, 58, 58));
                btnG7.setBackground(new java.awt.Color(197, 58, 58));
                btnG8.setBackground(new java.awt.Color(197, 58, 58));
                btnG9.setBackground(new java.awt.Color(197, 58, 58));
                //Update
                btnG1.paintImmediately(btnG1.getVisibleRect());
                btnG2.paintImmediately(btnG2.getVisibleRect());
                btnG3.paintImmediately(btnG3.getVisibleRect());
                btnG4.paintImmediately(btnG4.getVisibleRect());
                btnG5.paintImmediately(btnG5.getVisibleRect());
                btnG6.paintImmediately(btnG6.getVisibleRect());
                btnG7.paintImmediately(btnG7.getVisibleRect());
                btnG8.paintImmediately(btnG8.getVisibleRect());
                btnG9.paintImmediately(btnG9.getVisibleRect());
                //Wait
                FrmLeft.waitASec();
                //Reset
                btnG1.setBackground(new java.awt.Color(240, 240, 240));
                btnG2.setBackground(new java.awt.Color(240, 240, 240));
                btnG3.setBackground(new java.awt.Color(240, 240, 240));
                btnG4.setBackground(new java.awt.Color(240, 240, 240));
                btnG5.setBackground(new java.awt.Color(240, 240, 240));
                btnG6.setBackground(new java.awt.Color(240, 240, 240));
                btnG7.setBackground(new java.awt.Color(240, 240, 240));
                btnG8.setBackground(new java.awt.Color(240, 240, 240));
                btnG9.setBackground(new java.awt.Color(240, 240, 240));
                return;
            }
        }
        //Green: 88, 176, 60
        //Default: 240, 240, 240
        switch ((int)userPattern.get(userPattern.size()-1)){
            case 1:
                btnG1.setBackground(new java.awt.Color(88, 176, 60));
                btnG1.paintImmediately(btnG1.getVisibleRect());
                FrmLeft.waitASec();
                btnG1.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 2:
                btnG2.setBackground(new java.awt.Color(88, 176, 60));
                btnG2.paintImmediately(btnG2.getVisibleRect());
                FrmLeft.waitASec();
                btnG2.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 3:
                btnG3.setBackground(new java.awt.Color(88, 176, 60));
                btnG3.paintImmediately(btnG3.getVisibleRect());
                FrmLeft.waitASec();
                btnG3.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 4:
                btnG4.setBackground(new java.awt.Color(88, 176, 60));
                btnG4.paintImmediately(btnG4.getVisibleRect());
                FrmLeft.waitASec();
                btnG4.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 5:
                btnG5.setBackground(new java.awt.Color(88, 176, 60));
                btnG5.paintImmediately(btnG5.getVisibleRect());
                FrmLeft.waitASec();
                btnG5.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 6:
                btnG6.setBackground(new java.awt.Color(88, 176, 60));
                btnG6.paintImmediately(btnG6.getVisibleRect());
                FrmLeft.waitASec();
                btnG6.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 7:
                btnG7.setBackground(new java.awt.Color(88, 176, 60));
                btnG7.paintImmediately(btnG7.getVisibleRect());
                FrmLeft.waitASec();
                btnG7.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 8:
                btnG8.setBackground(new java.awt.Color(88, 176, 60));
                btnG8.paintImmediately(btnG8.getVisibleRect());
                FrmLeft.waitASec();
                btnG8.setBackground(new java.awt.Color(240, 240, 240));
                break;
            case 9:
                btnG9.setBackground(new java.awt.Color(88, 176, 60));
                btnG9.paintImmediately(btnG9.getVisibleRect());
                FrmLeft.waitASec();
                btnG9.setBackground(new java.awt.Color(240, 240, 240));
                break;
        }
        if (userPattern.size()==pattern.size()){
            //SUCCESS
            AG = false;
            lblDesc.setText("Success!");
            userPattern.clear();
            score++;
            lblCScore.setText("Current Score: "+score);
            if (hScore.hiScore<score){
                hScore.updateHS(score);
                lblHScore.setText("High Score: "+score);
            }
        }
    }
    
    /* GRID BUTTONS:
    Records this button as pressed to the array. Checks that the
    current user pattern matches the pattern it should be so far.
    If the user made a mistake, a method is called to cancel user
    input and display "Failure!" etc. etc. */
    
    private void btnG1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG1ActionPerformed
        if (AG){
            userPattern.add(1);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG1ActionPerformed

    private void btnG2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG2ActionPerformed
        if (AG){
            userPattern.add(2);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG2ActionPerformed

    private void btnG3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG3ActionPerformed
        if (AG){
            userPattern.add(3);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG3ActionPerformed

    private void btnG4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG4ActionPerformed
        if (AG){
            userPattern.add(4);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG4ActionPerformed

    private void btnG5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG5ActionPerformed
        if (AG){
            userPattern.add(5);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG5ActionPerformed

    private void btnG6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG6ActionPerformed
        if (AG){
            userPattern.add(6);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG6ActionPerformed

    private void btnG7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG7ActionPerformed
        if (AG){
            userPattern.add(7);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG7ActionPerformed

    private void btnG8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG8ActionPerformed
        if (AG){
            userPattern.add(8);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG8ActionPerformed

    private void btnG9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnG9ActionPerformed
        if (AG){
            userPattern.add(9);
            try {
                checkPattern();
            } catch (IOException ex) {
                Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnG9ActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        
        /* This button will start up the program, calling the method to
        search the text file for the high score. Then, immediately, it
        will run code to generate the first pattern, display it, and open
        the grid of buttons on the Right Frame for the user to copy. If the
        user succeeds, the score increases by one and a "Success!" message
        is displayed. They can click this button, now dubbed "NEXT", to
        continue. If the user makes one wrong button press, a "Failure"
        message is displayed, all their progress is lost, resetting their
        score to 0, and also recording their new high score to the text
        file IF it is greater than the last high score. This button, now
        dubbed "RESTART" can be pressed to reset the program and play again. */
        
        if (!AG){
            if (!started){
                //Changes button to "NEXT" right away
                btnNext.setText("NEXT");
                started = true;
                //Displays the high score by reading from the text file
                try {
                    lblHScore.setText("High Score: "+hScore.getHS());
                } catch (IOException ex) {
                    Logger.getLogger(FrmRight.class.getName()).log(Level.SEVERE, null, ex);
                }
                //Empties the description
                lblDesc.setText("");
                //Calls a method in the Left Frame to begin generating and displaying
                //the first pattern.
                pattern = FrmLeft.genPattern();
                FrmLeft.disPattern();
                //Opens the buttons for the user to enter in the pattern
                AG = true;
            } else {
                //Empties the description
                lblDesc.setText("");
                //Closes buttons
                AG = false;
                //Calls a method in the Left Frame to generate the next pattern.
                FrmLeft.pattern = FrmLeft.genPattern();
                FrmLeft.disPattern();
                //Opens the buttons for the user to enter in the pattern
                AG = true;
            }
        }
        
        
    
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRight().setVisible(true);
                new FrmLeft().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnG1;
    private javax.swing.JButton btnG2;
    private javax.swing.JButton btnG3;
    private javax.swing.JButton btnG4;
    private javax.swing.JButton btnG5;
    private javax.swing.JButton btnG6;
    private javax.swing.JButton btnG7;
    private javax.swing.JButton btnG8;
    private javax.swing.JButton btnG9;
    private static javax.swing.JButton btnNext;
    private static javax.swing.JLabel lblCScore;
    private static javax.swing.JLabel lblDesc;
    private static javax.swing.JLabel lblHScore;
    // End of variables declaration//GEN-END:variables
}
